name: Rust Toolchain for Xtensa
description: Install the Rust compiler fork targeting Xtensa devices
author: esp-rs

branding:
  icon: play-circle
  color: red

inputs:
  default:
    description: Set installed toolchain as default
    default: false
  buildtargets:
    description: Comma separated list of targets
    default: esp32,esp32s2,esp32s3
  version:
    description: Which version of the toolchain to install
    default: latest
  ldproxy:
    description: Whether to install ldproxy (required for `std`)
    default: true
  override:
    description: Whether to override the toolchain
    default: true
  export:
    description: Whether to export the `${ESPUP_EXPORT_FILE}` into the GitHub environment
    default: true

runs:
  using: composite
  steps:
    - name: Ensure that Rust is already installed
      shell: bash
      run: |
        if ! command -v rustup &> /dev/null; then
          curl https://sh.rustup.rs -sSf | sh -s -- --profile minimal -y
          export PATH="$HOME/.cargo/bin:$PATH"
          echo "PATH=$PATH" >> $GITHUB_ENV
        fi

    - name: Detect host target triple
      shell: bash
      run: |
        export HOST_TARGET=$(rustup show | grep "Default host" | sed -e 's/.* //')
        echo "HOST_TARGET=$HOST_TARGET" >> $GITHUB_ENV

    - name: Install ldproxy
      if: inputs.ldproxy == 'true'
      shell: bash
      run: |
        curl -LO https://github.com/esp-rs/embuild/releases/latest/download/ldproxy-${{ env.HOST_TARGET }}.zip
        unzip -o ldproxy-${{ env.HOST_TARGET }}.zip -d "$HOME/.cargo/bin"
        chmod +x "$HOME/.cargo/bin/ldproxy"*

    - name: Install espup
      shell: bash
      run: |
        curl -LO https://github.com/esp-rs/espup/releases/latest/download/espup-${{ env.HOST_TARGET }}.zip
        unzip -o espup-${{ env.HOST_TARGET }}.zip -d "$HOME/.cargo/bin"
        chmod +x "$HOME/.cargo/bin/espup"*
        echo "ESPUP_EXPORT_FILE=$HOME/exports" >> $GITHUB_ENV

    - name: Install Xtensa toolchain (Linux, macOS)
      if: env.HOST_TARGET != 'x86_64-pc-windows-msvc'
      shell: bash
      run: |
        source "$HOME/.cargo/env"
        [[ "${{ inputs.version }}" != latest ]] && version="--toolchain-version ${{ inputs.version }}" || version=""
        "$HOME/.cargo/bin/espup" install -l debug --targets ${{ inputs.buildtargets }} $version
        source "$HOME/exports"
        if [[ "${{ inputs.export }}" = true ]]; then
            echo "$PATH" >> "$GITHUB_PATH"
            echo "LIBCLANG_PATH=${LIBCLANG_PATH}" >> "$GITHUB_ENV"
        fi

    - name: Install Xtensa toolchain (Windows)
      if: env.HOST_TARGET == 'x86_64-pc-windows-msvc'
      shell: bash
      run: |
        [[ "${{ inputs.version }}" != latest ]] && version="--toolchain-version ${{ inputs.version }}" || version=""
        "$HOME/.cargo/bin/espup.exe" install -l debug --targets ${{ inputs.buildtargets }} $version

    - name: Set default and override
      shell: bash
      run: |
        [[ "${{ inputs.default }}" = true ]] && rustup default esp || true
        [[ "${{ inputs.override }}" = true ]] && rustup override unset || true
